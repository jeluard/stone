<dependency><!-- https://github.com/dain/leveldb -->
    <groupId>org.iq80.leveldb</groupId>
    <artifactId>leveldb</artifactId>
    <version>0.4</version>
</dependency>
<dependency><!-- https://github.com/dain/snappy -->
    <groupId>org.iq80.snappy</groupId>
    <artifactId>snappy</artifactId>
    <version>0.2</version>
</dependency>
<dependency>
    <groupId>net.jpountz.lz4</groupId>
    <artifactId>lz4</artifactId>
    <version>1.0.0</version>
</dependency>
<dependency>
    <groupId>com.linkedin.kamikaze</groupId>
    <artifactId>kamikaze</artifactId>
    <version>3.0.7</version>
</dependency>
<dependency>
    <groupId>com.github.jponge</groupId>
    <artifactId>lzma-java</artifactId>
    <version>1.2</version>
</dependency>

<!--
http://yow.eventer.com/yow-2012-1012/lock-free-algorithms-for-ultimate-performance-by-martin-thompson-1250
http://www.cyclesresearchinstitute.org/cycles/cycles-data.shtml

http://hawtdispatch.fusesource.org/
http://www.symphonious.net/2011/07/11/lmax-disruptor-high-performance-low-latency-and-simple-too/

http://mechanical-sympathy.blogspot.co.uk/2011/09/single-writer-principle.html
http://mechanical-sympathy.blogspot.co.uk/2012/03/fun-with-my-channels-nirvana-and-azul.html
http://mechanical-sympathy.blogspot.co.uk/2012/08/memory-access-patterns-are-important.html
http://mechanical-sympathy.blogspot.co.uk/2012/05/apply-back-pressure-when-overloaded.html
http://mechanical-sympathy.blogspot.co.uk/2012/04/invoke-interface-optimisations.html
http://mechanical-sympathy.blogspot.co.uk/2011/10/smart-batching.html
http://mechanical-sympathy.blogspot.co.uk/2011/09/modelling-is-everything.html
http://psy-lob-saw.blogspot.co.uk/2012/12/atomiclazyset-is-performance-win-for.html
http://www.1024cores.net/

https://github.com/peter-lawrey/Java-Thread-Affinity
https://github.com/peter-lawrey/Java-Chronicle
http://psy-lob-saw.blogspot.com.ar/2013/01/direct-memory-alignment-in-java.html

http://webtide.intalio.com/2012/12/avoiding-parallel-slowdown-in-jetty-9/
http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array/11227902#11227902

http://mentaaffinity.soliveirajr.com/

https://github.com/bulldog2011/bigqueue
https://gist.github.com/simbo1905/4968112
https://github.com/jimfcarroll/Dempsy/tree/high-performance/lib-dempsyimpl/src/main/java/com/nokia/dempsy/util

#Packing/Compression

http://giltene.github.com/HdrHistogram/
http://lemire.me/blog/archives/2012/03/06/how-fast-is-bit-packing/
http://lemire.me/blog/archives/2012/09/12/fast-integer-compression-decoding-billions-of-integers-per-second/
http://blog.jpountz.net/post/25530978824/how-fast-is-bit-packing
http://sna-projects.com/kamikaze/design.php
https://github.com/lemire/JavaFastPFOR
http://code.google.com/p/integer-array-compress-kit/
https://issues.apache.org/jira/browse/LUCENE-2189
http://mg4j.di.unimi.it/
http://www.insightfullogic.com/blog/2013/jan/3/slab-guaranteed-heap-alignment-jvm/

# Cassandra
https://github.com/datastax/java-driver
https://github.com/Netflix/astyanax
http://hector-client.github.com/hector/
https://openshift.redhat.com/community/blogs/cassandra-on-openshift
https://openshift.redhat.com/community/blogs/announcing-openshift-pricing-beyond-free-php-and-java-hosting-in-the-cloud

# Analysis

https://github.com/jolby/rincanter
http://jblas.org/
http://www.cs.waikato.ac.nz/ml/weka/
https://github.com/kovasb/session
http://weber.ucsd.edu/~jhamilto/software.htm#book

## Bitmap indexes

http://en.wikipedia.org/wiki/Bitmap_index
http://lemire.me/blog/archives/2008/08/20/the-mythical-bitmap-index/
http://code.google.com/p/javaewah/
http://lemire.me/blog/archives/2012/10/23/when-is-a-bitmap-faster-than-an-integer-list/
https://github.com/lemire/simplebitmapbenchmark/

http://clj-me.cgrand.net/2013/02/12/decaying-lists-log-scale-for-lists/
http://blog.bigml.com/2013/02/11/streaming-histograms-for-clojure-and-java/
https://github.com/bigmlcom/histogram
https://github.com/bigmlcom/sampling
http://blog.bigml.com/2013/01/22/a-random-sampling-library-for-clojure/

http://www.abs.gov.au/websitedbs/D3310114.nsf/home/Time+Series+Analysis:+The+Basics
https://wiki.palantir.com/metropolis/working-with-time-series-data.html

http://labs.carrotsearch.com/randomizedtesting-shortexample.html
http://labs.carrotsearch.com/hppc-api-and-code-examples.html

http://blog.bigml.com/2012/06/18/bigmls-fancy-histograms/

http://fastmpj.com/
http://javafastsockets.com/
http://javolution.org/target/site/apidocs/javolution/io/Struct.html
http://javarevisited.blogspot.com.ar/2012/01/memorymapped-file-and-io-in-java.html

http://szegedi.github.com/dynalink/
http://pitest.org/quickstart/maven/

https://github.com/daveray/rx-clj
http://bl.ocks.org/benjchristensen/2657838

http://eng.42go.com/a-simple-time-decaying-approximate-membership-filter/

# Clojure

https://github.com/dgrnbrg/vim-redl
https://github.com/guns/vim-clojure-static
http://michaelalynmiller.com/blog/2013/02/27/vim-tmux-clojure/
https://github.com/cemerick/clojurescript.test
https://github.com/hraberg/mimir
https://github.com/ohpauleez/shoreleave

http://eng.42go.com/a-simple-time-decaying-approximate-membership-filter/
-->